version: 2
jobs:
  build-image:

    docker:
      - image: google/cloud-sdk:latest

    working_directory: ~/repo

    steps:
      - checkout

      # starts a remote docker environment to run docker commands
      - setup_remote_docker

      - run:
          name: build nginx docker image and push image to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t cyberdojo/nginx:${CIRCLE_SHA1:0:7} .
            docker push cyberdojo/nginx:${CIRCLE_SHA1:0:7}

  deploy-image-to-beta:
    docker:
      - image: lfaoro/gcloud-kubectl-helm
    steps:
      - run:
          name: authenticate with gcloud
          environment:
            SERVICE_ACCOUNT: cyber-dojo-circleci-deploy@cyber-dojo-praqma.iam.gserviceaccount.com
            KEYFILE: gcp-credentials.json
            CLUSTER: test
            ZONE: europe-west1-b
            PROJECT: cyber-dojo-praqma
          command: |
            echo $GCP_K8S_CREDENTIALS > /gcp/gcp-credentials.json
            ./authenticate.bash
      - run:
          name: deploy with helm
          command: |
            helm repo add praqma https://praqma-helm-repo.s3.amazonaws.com/
            helm upgrade --install --namespace=beta â€”set image.nginx.tag=${CIRCLE_SHA1:0:7} beta-cyber-dojo praqma/cyber-dojo
  # deploy-to-dev:
  #   docker:
  #     - image: praqma/helmsman:v1.3.0-helm-v2.8.1
  #   steps:
  #     - checkout
  #     - run:
  #         name: run helmsman
  #         command: |
  #           helmsman -debug -apply -f .circleci/helmsman-dev-deployment.toml
  # deploy-to-beta:
  #   docker:
  #     - image: praqma/helmsman:v1.3.0-helm-v2.8.1
  #   steps:
  #     - checkout
  #     - run:
  #         name: run helmsman
  #         command: |
  #           helmsman -debug -apply -f .circleci/helmsman-beta-deployment.toml


workflows:
  version: 2
  build-publish-deploy:
    jobs:
      - build-image:
          context: cyberdojo-context
          filters:
            branches:
              only:
                - master
      - deploy-image-to-beta:
          context: cyberdojo-context
          requires: build-image
